{
  "description": "A CertificateRequest is used to request a signed certificate from one of the\nconfigured issuers.\n\nAll fields within the CertificateRequest's `spec` are immutable after creation.\nA CertificateRequest will either succeed or fail, as denoted by its `status.state`\nfield.\n\nA CertificateRequest is a one-shot resource, meaning it represents a single\npoint in time request for a certificate and cannot be re-used.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Desired state of the CertificateRequest resource.",
      "type": "object",
      "required": [
        "issuerRef",
        "request"
      ],
      "properties": {
        "duration": {
          "description": "The requested 'duration' (i.e. lifetime) of the Certificate.\nThis option may be ignored/overridden by some issuer types.",
          "type": "string"
        },
        "extra": {
          "description": "Extra contains extra attributes of the user that created the CertificateRequest.\nPopulated by the cert-manager webhook on creation and immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "description": "Groups contains group membership of the user that created the CertificateRequest.\nPopulated by the cert-manager webhook on creation and immutable.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "isCA": {
          "description": "IsCA will request to mark the certificate as valid for certificate signing\nwhen submitting to the issuer.\nThis will automatically add the `cert sign` usage to the list of `usages`.",
          "type": "boolean"
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to the issuer for this CertificateRequest.  If\nthe `kind` field is not set, or set to `Issuer`, an Issuer resource with\nthe given name in the same namespace as the CertificateRequest will be\nused.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with\nthe provided name will be used. The `name` field in this stanza is\nrequired at all times. The group field refers to the API group of the\nissuer which defaults to `cert-manager.io` if empty.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "group": {
              "description": "Group of the resource being referred to.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the resource being referred to.",
              "type": "string"
            },
            "name": {
              "description": "Name of the resource being referred to.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "request": {
          "description": "The PEM-encoded x509 certificate signing request to be submitted to the\nCA for signing.",
          "type": "string",
          "format": "byte"
        },
        "uid": {
          "description": "UID contains the uid of the user that created the CertificateRequest.\nPopulated by the cert-manager webhook on creation and immutable.",
          "type": "string"
        },
        "usages": {
          "description": "Usages is the set of x509 usages that are requested for the certificate.\nIf usages are set they SHOULD be encoded inside the CSR spec\nDefaults to `digital signature` and `key encipherment` if not specified.",
          "type": "array",
          "items": {
            "description": "KeyUsage specifies valid usage contexts for keys.\nSee:\nhttps://tools.ietf.org/html/rfc5280#section-4.2.1.3\nhttps://tools.ietf.org/html/rfc5280#section-4.2.1.12\n\nValid KeyUsage values are as follows:\n\"signing\",\n\"digital signature\",\n\"content commitment\",\n\"key encipherment\",\n\"key agreement\",\n\"data encipherment\",\n\"cert sign\",\n\"crl sign\",\n\"encipher only\",\n\"decipher only\",\n\"any\",\n\"server auth\",\n\"client auth\",\n\"code signing\",\n\"email protection\",\n\"s/mime\",\n\"ipsec end system\",\n\"ipsec tunnel\",\n\"ipsec user\",\n\"timestamping\",\n\"ocsp signing\",\n\"microsoft sgc\",\n\"netscape sgc\"",
            "type": "string",
            "enum": [
              "signing",
              "digital signature",
              "content commitment",
              "key encipherment",
              "key agreement",
              "data encipherment",
              "cert sign",
              "crl sign",
              "encipher only",
              "decipher only",
              "any",
              "server auth",
              "client auth",
              "code signing",
              "email protection",
              "s/mime",
              "ipsec end system",
              "ipsec tunnel",
              "ipsec user",
              "timestamping",
              "ocsp signing",
              "microsoft sgc",
              "netscape sgc"
            ]
          }
        },
        "username": {
          "description": "Username contains the name of the user that created the CertificateRequest.\nPopulated by the cert-manager webhook on creation and immutable.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status of the CertificateRequest. This is set and managed automatically.",
      "type": "object",
      "properties": {
        "ca": {
          "description": "The PEM encoded x509 certificate of the signer, also known as the CA\n(Certificate Authority).\nThis is set on a best-effort basis by different issuers.\nIf not set, the CA is assumed to be unknown/not available.",
          "type": "string",
          "format": "byte"
        },
        "certificate": {
          "description": "The PEM encoded x509 certificate resulting from the certificate\nsigning request.\nIf not set, the CertificateRequest has either not been completed or has\nfailed. More information on failure can be found by checking the\n`conditions` field.",
          "type": "string",
          "format": "byte"
        },
        "conditions": {
          "description": "List of status conditions to indicate the status of a CertificateRequest.\nKnown condition types are `Ready` and `InvalidRequest`.",
          "type": "array",
          "items": {
            "description": "CertificateRequestCondition contains condition information for a CertificateRequest.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the timestamp corresponding to the last status\nchange of this condition.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Message is a human readable description of the details of the last\ntransition, complementing reason.",
                "type": "string"
              },
              "reason": {
                "description": "Reason is a brief machine readable explanation for the condition's last\ntransition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "Type of the condition, known values are (`Ready`, `InvalidRequest`,\n`Approved`, `Denied`).",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "failureTime": {
          "description": "FailureTime stores the time that this CertificateRequest failed. This is\nused to influence garbage collection and back-off.",
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  }
}